package dev._2lstudios.exploitfixer.managers;

import dev._2lstudios.exploitfixer.exploit.BukkitExploitPlayer;
import org.bukkit.Server;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class ExploitPlayerManager {
    private final Plugin plugin;
    private final Server server;
    private final ModuleManager moduleManager;
    private final Map<UUID, BukkitExploitPlayer> exploitPlayers = new HashMap<>();
    private int punishments = 0;

    ExploitPlayerManager(Plugin plugin, Server server, ModuleManager moduleManager) {
        this.plugin = plugin;
        this.server = server;
        this.moduleManager = moduleManager;
    }

    public BukkitExploitPlayer get(UUID uuid) {
        /*
        BukkitExploitPlayer exploitPlayer;

        if (exploitPlayers.containsKey(uuid)) {
            exploitPlayer = exploitPlayers.get(uuid);
        } else {
            exploitPlayer = new BukkitExploitPlayer(this.plugin, moduleManager, uuid);
            exploitPlayers.put(uuid, exploitPlayer);
        }
         */

        return exploitPlayers.computeIfAbsent(uuid, key -> new BukkitExploitPlayer(this.plugin, moduleManager, uuid));
    }

    public BukkitExploitPlayer get(Player player) {
        return get(player.getUniqueId());
    }

    public void remove(UUID uuid) {
        exploitPlayers.remove(uuid);
    }

    public void remove(Player player) {
        remove(player.getUniqueId());
    }

    public void reload() {
        exploitPlayers.clear();

        for (Player player : server.getOnlinePlayers()) {
            get(player);
        }
    }

    public int getSize() {
        return exploitPlayers.size();
    }

    public int getPunishments() {
        return punishments;
    }

    public int addPunishment() {
        return punishments++;
    }
}
