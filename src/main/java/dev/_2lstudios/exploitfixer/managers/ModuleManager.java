package dev._2lstudios.exploitfixer.managers;

import dev._2lstudios.exploitfixer.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.modules.impl.*;
import dev._2lstudios.exploitfixer.utils.IConfigurationUtil;
import org.bukkit.Server;
import org.bukkit.plugin.Plugin;

import java.io.File;
import java.util.logging.Logger;

public class ModuleManager {
    private final Plugin plugin;
    private final CommandsModule commandsModule;
    private final ConnectionModule connectionModule;
    private final EventsModule eventsModule;
    private final ItemsFixModule itemsFixModule;
    private final MessagesModule messagesModule;
    private final NotificationsModule notificationsModule;
    private final PacketsModule packetsModule;
    private final ExploitPlayerManager exploitPlayerManager;

    public ModuleManager(IConfigurationUtil configurationUtil, Plugin plugin) {
        this.plugin = plugin;

        Server server = plugin.getServer();
        Logger logger = plugin.getLogger();

        this.commandsModule = new CommandsModule();
        this.connectionModule = new ConnectionModule();
        this.eventsModule = new EventsModule();
        this.itemsFixModule = new ItemsFixModule(plugin);
        this.messagesModule = new MessagesModule(configurationUtil, logger, plugin.getDescription().getVersion());
        this.notificationsModule = new NotificationsModule(server, logger);
        this.packetsModule = new PacketsModule();
        this.exploitPlayerManager = new ExploitPlayerManager(plugin, server, this);
    }

    public void reload(IConfiguration configYml) {
        try {
            File localeFolder = new File(plugin.getDataFolder() + "/locales/");

            localeFolder.mkdirs();

            this.commandsModule.reload(configYml);
            this.connectionModule.reload(configYml);
            this.eventsModule.reload(configYml);
            this.itemsFixModule.reload(configYml);
            this.messagesModule.reload(configYml, localeFolder);
            this.notificationsModule.reload(configYml);
            this.packetsModule.reload(configYml);
            this.exploitPlayerManager.reload();
        } catch (NullPointerException exception) {
            NullPointerException newException = new NullPointerException(
                    "Your ExploitFixer configuration is wrong, please reset it or the plugin wont work!");

            newException.setStackTrace(exception.getStackTrace());

            throw newException;
        }
    }

    public CommandsModule getCommandsModule() {
        return commandsModule;
    }

    public ConnectionModule getConnectionModule() {
        return connectionModule;
    }

    public EventsModule getEventsModule() {
        return eventsModule;
    }

    public ItemsFixModule getItemsFixModule() {
        return itemsFixModule;
    }

    public MessagesModule getMessagesModule() {
        return messagesModule;
    }

    public NotificationsModule getNotificationsModule() {
        return notificationsModule;
    }

    public ExploitPlayerManager getExploitPlayerManager() {
        return exploitPlayerManager;
    }

    public PacketsModule getPacketsModule() {
        return packetsModule;
    }
}
