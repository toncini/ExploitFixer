package dev._2lstudios.exploitfixer.modules.impl;

import dev._2lstudios.exploitfixer.configuration.IConfiguration;
import dev._2lstudios.exploitfixer.exploit.Violations;
import dev._2lstudios.exploitfixer.modules.IViolationModule;
import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
import it.unimi.dsi.fastutil.objects.Object2DoubleOpenHashMap;

import java.util.HashSet;
import java.util.Set;

public class PacketsModule implements IViolationModule {
    private final Object2DoubleMap<String> multipliers = new Object2DoubleOpenHashMap<>();
    private Set<String> blacklist = new HashSet<>();
    private Violations violations;
    private double dataVls, bookVls, tagVls, blockDigVls, blockPlaceVls, setCreativeSlot, windowClick, cancelVls,
            reduceVls, vlMultiplier;
    private int dataBytesBook, dataBytesSign, dataBytes;
    private boolean enabled, offline;

    public void reload(IConfiguration configYml) {
        String name = getName().toLowerCase();
        IConfiguration configurationSection = configYml.getSection(name + ".multipliers");

        this.enabled = configYml.getBoolean(name + ".enabled");
        this.cancelVls = configYml.getDouble(name + ".cancel_vls");
        this.reduceVls = configYml.getDouble(name + ".reduce_vls");
        this.offline = configYml.getBoolean(name + ".offline");
        this.dataVls = configYml.getDouble(name + ".data.vls");
        this.bookVls = configYml.getDouble(name + ".book");
        this.tagVls = configYml.getDouble(name + ".tag");
        this.dataBytes = configYml.getInt(name + ".data.bytes");
        this.dataBytesBook = configYml.getInt(name + ".data.bytes_book");
        this.dataBytesSign = configYml.getInt(name + ".data.bytes_sign");
        this.vlMultiplier = configYml.getDouble(name + ".data.vl_multiplier");
        this.windowClick = configYml.getDouble(name + ".window_click");
        this.blockPlaceVls = configYml.getDouble(name + ".block_place");
        this.blockDigVls = configYml.getDouble(name + ".block_dig");
        this.setCreativeSlot = configYml.getDouble(name + ".set_creative_slot");
        this.blacklist = new HashSet<>(configYml.getStringList(name + ".blacklist"));
        this.violations = new Violations(configYml.getSection(name + ".violations"));

        for (String key : configurationSection.getKeys()) {
            multipliers.put(key, configurationSection.getDouble(key));
        }
    }

    @Override
    public boolean isEnabled() {
        return enabled;
    }

    @Override
    public String getName() {
        return "Packets";
    }

    @Override
    public double getCancelVls() {
        return cancelVls;
    }

    @Override
    public double getReduceVls() {
        return reduceVls;
    }

    @Override
    public Violations getViolations() {
        return violations;
    }

    public double getMultiplier(String packetName) {
        return multipliers.getOrDefault(packetName, multipliers.getOrDefault("PacketPlayInOther", 1D));
    }

    public double getWindowClick() {
        return windowClick;
    }

    public double getSetCreativeSlot() {
        return setCreativeSlot;
    }

    public double getBlockDigVls() {
        return blockDigVls;
    }

    public double getBlockPlaceVls() {
        return blockPlaceVls;
    }

    public double getDataVls() {
        return dataVls;
    }

    public double getBookVls() {
        return bookVls;
    }

    public double getTagVls() {
        return tagVls;
    }

    public int getDataBytes() {
        return dataBytes;
    }

    public int getDataBytesBook() {
        return dataBytesBook;
    }

    public int getDataBytesSign() {
        return dataBytesSign;
    }

    public double getDataVlMultiplier() {
        return vlMultiplier;
    }

    public boolean isOffline() {
        return offline;
    }

    public boolean isBlacklisted(String packetName) {
        return blacklist.contains(packetName);
    }
}
